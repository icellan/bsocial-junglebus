{"version":3,"file":"reconnecting-eventsource.js","names":["ReconnectingEventSource","constructor","url","configuration","_configuration","Object","assign","_eventSource","_lastEventId","_timer","_listeners","readyState","max_retry_time","lastEventId","_onevent_wrapped","event","_onevent","_start","indexOf","encodeURIComponent","EventSource","onopen","_onopen","onerror","_onerror","onmessage","type","keys","addEventListener","close","timeout","Math","round","random","setTimeout","listenersForType","listener","clearTimeout","inType","callback","toString","includes","removeEventListener","updatedListenersForType","filter","l","length"],"sources":["../../src/lib/reconnecting-eventsource.js"],"sourcesContent":["// this is a copy of the reconnecting-eventsource code as it did not import properly :-S\n// https://github.com/fanout/reconnecting-eventsource\n/* eslint-disable */\nimport EventSource from 'eventsource';\n\n// MIT License:\n//\n// Copyright (C) 2017 Fanout, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n\nexport default class ReconnectingEventSource {\n\n  constructor(url, configuration) {\n    this._configuration = configuration != null ? Object.assign({}, configuration) : null;\n\n    this._eventSource = null;\n    this._lastEventId = null;\n    this._timer = null;\n    this._listeners = {};\n\n    this.url = url;\n    this.readyState = 0;\n    this.max_retry_time = 3000;\n\n    if (this._configuration != null) {\n      if (this._configuration.lastEventId) {\n        this._lastEventId = this._configuration.lastEventId;\n        delete this._configuration['lastEventId'];\n      }\n\n      if (this._configuration.max_retry_time) {\n        this.max_retry_time = this._configuration.max_retry_time;\n        delete this._configuration['max_retry_time'];\n      }\n    }\n\n    this._onevent_wrapped = event => { this._onevent(event); };\n\n    this._start();\n  }\n\n  _start() {\n    let url = this.url;\n\n    if (this._lastEventId) {\n      if (url.indexOf('?') === -1) {\n        url += '?';\n      } else {\n        url += '&';\n      }\n      url += 'lastEventId=' + encodeURIComponent(this._lastEventId);\n    }\n\n    this._eventSource = new EventSource(url, this._configuration);\n\n    this._eventSource.onopen = event => { this._onopen(event); };\n    this._eventSource.onerror = event => { this._onerror(event); };\n    this._eventSource.onmessage = event => { this.onmessage(event); };\n\n    // apply listen types\n    for (const type of Object.keys(this._listeners)) {\n      this._eventSource.addEventListener(type, this._onevent_wrapped);\n    }\n  }\n\n  _onopen(event) {\n    if (this.readyState === 0) {\n      this.readyState = 1;\n      this.onopen(event);\n    }\n  }\n\n  _onerror(event) {\n    if (this.readyState === 1) {\n      this.readyState = 0;\n      this.onerror(event);\n    }\n\n    if (this._eventSource) {\n      if(this._eventSource.readyState === 2) {\n        // reconnect with new object\n        this._eventSource.close();\n        this._eventSource = null;\n\n        // reconnect after random timeout < max_retry_time\n        const timeout = Math.round(this.max_retry_time * Math.random());\n        this._timer = setTimeout(() => this._start(), timeout);\n      }\n    }\n  }\n\n  _onevent(event) {\n    if (event.lastEventId) {\n      this._lastEventId = event.lastEventId;\n    }\n\n    const listenersForType = this._listeners[event.type];\n    if (listenersForType != null) {\n      // operate on a copy\n      for (const listener of [...listenersForType]) {\n        listener(event);\n      }\n    }\n\n    if (event.type === 'message') {\n      this.onmessage(event);\n    }\n  }\n\n  onopen(event) {\n    // may be overridden\n  }\n\n  onerror(event) {\n    // may be overridden\n  }\n\n  onmessage(event) {\n    // may be overridden\n  }\n\n  close() {\n    if (this._timer) {\n      clearTimeout(this._timer);\n      this._timer = null;\n    }\n\n    if (this._eventSource) {\n      this._eventSource.close();\n      this._eventSource = null;\n    }\n\n    this.readyState = 2;\n  }\n\n  addEventListener(inType, callback) {\n    const type = inType.toString();\n\n    if (!(type in this._listeners)) {\n      this._listeners[type] = [];\n      if (this._eventSource) {\n        this._eventSource.addEventListener(type, this._onevent_wrapped);\n      }\n    }\n\n    const listenersForType = this._listeners[type];\n    if (!listenersForType.includes(callback)) {\n      this._listeners[type] = [...listenersForType, callback];\n    }\n  }\n\n  removeEventListener(inType, callback) {\n    const type = inType.toString();\n\n    if (type in this._listeners) {\n\n      const listenersForType = this._listeners[type];\n\n      const updatedListenersForType = listenersForType.filter(l => l !== callback);\n\n      if (updatedListenersForType.length > 0) {\n        this._listeners[type] = updatedListenersForType;\n      } else {\n        delete this._listeners[type];\n        if (this._eventSource) {\n          this._eventSource.removeEventListener(type, this._onevent_wrapped);\n        }\n      }\n    }\n  }\n}\n"],"mappings":"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"}