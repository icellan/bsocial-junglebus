{"version":3,"file":"random.js","names":["UNMISTAKABLE_CHARS","BASE64_CHARS","fraction","numerator","Number","parseInt","hexString","digits","bytes","numBytes","Math","ceil","crypto","randomBytes","e","pseudoRandomBytes","result","toString","substring","_randomString","charsCount","alphabet","i","choice","id","secret","arrayOrString","index","floor","length","substr"],"sources":["../../src/lib/random.js"],"sourcesContent":["import crypto from 'crypto';\n\n// imported from Meteor.Random\nconst UNMISTAKABLE_CHARS = '23456789ABCDEFGHJKLMNPQRSTWXYZabcdefghijkmnopqrstuvwxyz';\nconst BASE64_CHARS = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-_';\n\nexport default {\n  /**\n   * @name Random.fraction\n   * @summary Return a number between 0 and 1, like `Math.random`.\n   * @locus Anywhere\n   */\n  fraction() {\n    const numerator = Number.parseInt(this.hexString(8), 16);\n    return numerator * 2.3283064365386963e-10; // 2^-3;\n  },\n\n  /**\n   * @name Random.hexString\n   * @summary Return a random string of `n` hexadecimal digits.\n   * @locus Anywhere\n   * @param {Number} n Length of the string\n   */\n  hexString(digits) {\n    const numBytes = Math.ceil(digits / 2);\n    let bytes;\n    // Try to get cryptographically strong randomness. Fall back to\n    // non-cryptographically strong if not available.\n    try {\n      bytes = crypto.randomBytes(numBytes);\n    } catch (e) {\n      // XXX should re-throw any error except insufficient entropy\n      bytes = crypto.pseudoRandomBytes(numBytes);\n    }\n    const result = bytes.toString('hex');\n    // If the number of digits is odd, we'll have generated an extra 4 bits\n    // of randomness, so we need to trim the last digit.\n    return result.substring(0, digits);\n  },\n\n  _randomString(charsCount, alphabet) {\n    let result = '';\n    for (let i = 0; i < charsCount; i++) {\n      result += this.choice(alphabet);\n    }\n    return result;\n  },\n\n  /**\n   * @name Random.id\n   * @summary Return a unique identifier, such as `\"Jjwjg6gouWLXhMGKW\"`, that is\n   * likely to be unique in the whole world.\n   * @locus Anywhere\n   * @param {Number} [n] Optional length of the identifier in characters\n   *   (defaults to 17)\n   */\n  id(charsCount) {\n    // 17 characters is around 96 bits of entropy, which is the amount of\n    // state in the Alea PRNG.\n    if (charsCount === undefined) {\n      charsCount = 17;\n    }\n\n    return this._randomString(charsCount, UNMISTAKABLE_CHARS);\n  },\n\n  /**\n   * @name Random.secret\n   * @summary Return a random string of printable characters with 6 bits of\n   * entropy per character. Use `Random.secret` for security-critical secrets\n   * that are intended for machine, rather than human, consumption.\n   * @locus Anywhere\n   * @param {Number} [n] Optional length of the secret string (defaults to 43\n   *   characters, or 256 bits of entropy)\n   */\n  secret(charsCount) {\n    // Default to 256 bits of entropy, or 43 characters at 6 bits per\n    // character.\n    if (charsCount === undefined) {\n      charsCount = 43;\n    }\n\n    return this._randomString(charsCount, BASE64_CHARS);\n  },\n\n  /**\n   * @name Random.choice\n   * @summary Return a random element of the given array or string.\n   * @locus Anywhere\n   * @param {Array|String} arrayOrString Array or string to choose from\n   */\n  choice(arrayOrString) {\n    const index = Math.floor(this.fraction() * arrayOrString.length);\n    if (typeof arrayOrString === 'string') {\n      return arrayOrString.substr(index, 1);\n    }\n    return arrayOrString[index];\n  },\n};\n"],"mappings":"oOAGMA,kBAAkB,CAAG,yDAAyD,CAC9EC,YAAY,CAAG,kEAAkE,UAExE,CAMbC,QAAQ,EAAG,CACT,GAAMC,EAAS,CAAGC,MAAM,CAACC,QAAQ,CAAC,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC,CAAE,EAAE,CAAC,CACxD,MAAmB,sBAAsB,CAAlCH,CACT,CAAC,CAQDG,SAAS,CAACC,CAAM,CAAE,IAEZC,EAAK,CADHC,CAAQ,CAAGC,IAAI,CAACC,IAAI,CAACJ,CAAM,CAAG,CAAC,CAAC,CAItC,GAAI,CACFC,CAAK,CAAGI,eAAM,CAACC,WAAW,CAACJ,CAAQ,CACrC,CAAE,MAAOK,CAAC,CAAE,CAEVN,CAAK,CAAGI,eAAM,CAACG,iBAAiB,CAACN,CAAQ,CAC3C,CACA,GAAMO,EAAM,CAAGR,CAAK,CAACS,QAAQ,CAAC,KAAK,CAAC,CAGpC,MAAOD,EAAM,CAACE,SAAS,CAAC,CAAC,CAAEX,CAAM,CACnC,CAAC,CAEDY,aAAa,CAACC,CAAU,CAAEC,CAAQ,CAAE,CAElC,OADIL,EAAM,CAAG,EAAE,CACNM,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGF,CAAU,CAAEE,CAAC,EAAE,CACjCN,CAAM,EAAI,IAAI,CAACO,MAAM,CAACF,CAAQ,CAAC,CAEjC,MAAOL,EACT,CAAC,CAUDQ,EAAE,CAACJ,CAAU,CAAE,CAOb,MAJI,UAAAA,CAAwB,GAC1BA,CAAU,CAAG,EAAE,EAGV,IAAI,CAACD,aAAa,CAACC,CAAU,CAAEpB,kBAAkB,CAC1D,CAAC,CAWDyB,MAAM,CAACL,CAAU,CAAE,CAOjB,MAJI,UAAAA,CAAwB,GAC1BA,CAAU,CAAG,EAAE,EAGV,IAAI,CAACD,aAAa,CAACC,CAAU,CAAEnB,YAAY,CACpD,CAAC,CAQDsB,MAAM,CAACG,CAAa,CAAE,CACpB,GAAMC,EAAK,CAAGjB,IAAI,CAACkB,KAAK,CAAC,IAAI,CAAC1B,QAAQ,EAAE,CAAGwB,CAAa,CAACG,MAAM,CAAC,CAAC,MACpC,QAAQ,EAAjC,MAAOH,EAA0B,CAC5BA,CAAa,CAACI,MAAM,CAACH,CAAK,CAAE,CAAC,CAAC,CAEhCD,CAAa,CAACC,CAAK,CAC5B,CACF,CAAC"}